# evaluaciones.py

# Traemos nuestra clase Pizza desde el archivo pizza.py.
# ¬°Aqu√≠ es donde usaremos nuestra "m√°quina" de hacer pizzas!
from pizza import Pizza

# --- Requerimiento 5a ---
# ¬°Vamos a imprimir los atributos de clase sin siquiera crear una pizza todav√≠a!
# Estos son como los ajustes predeterminados para TODAS las pizzas.
print("--- Atributos de Clase de Pizza ---")
print(f"Precio de todas las pizzas: ${Pizza.precio}")
print(f"Tama√±o de todas las pizzas: {Pizza.tamano}")
print("-" * 30)

# --- Requerimiento 5b ---
# Ahora, usemos ese incre√≠ble m√©todo est√°tico 'validar_elemento' para verificar algo.
# No necesitamos un objeto pizza para hacer esto, ¬°s√∫per conveniente!
print("\n--- Validaci√≥n de Elemento (sin instancia) ---")
elemento_a_validar = "salsa de tomate"
lista_ejemplo = ["salsa de tomate", "salsa bbq"]
print(f"¬ø'{elemento_a_validar}' est√° en {lista_ejemplo}? {Pizza.validar_elemento(elemento_a_validar, lista_ejemplo)}")
print("-" * 30)

# --- Men√∫ Principal con opci√≥n de salir ---
print("\n¬°Bienvenido al sistema de pedidos de Pizza!")
while True:
    print("\n--- Men√∫ Principal ---")
    print("1. Ordenar una Pizza")
    print("2. Salir del Programa")

    opcion = input("Selecciona una opci√≥n (1 o 2): ")

    if opcion == '1':
        # --- Requerimiento 5c & 5d ---
        # Time to create our very own pizza instance!
        print("\n--- Creando una Instancia de Pizza y Haciendo un Pedido ---")
        mi_pizza = Pizza()
        mi_pizza.hacer_pedido() # Esto le pedir√° informaci√≥n al usuario.

        # After the user has entered their choices, let's see what they picked and if it's a valid pizza.
        print("\n--- Detalles de tu Pizza ---")
        print(f"Ingrediente proteico: {mi_pizza.ingrediente_proteico}")
        print(f"Ingredientes vegetales: {mi_pizza.ingredientes_vegetales[0]}, {mi_pizza.ingredientes_vegetales[1]}")
        print(f"Tipo de masa: {mi_pizza.tipo_masa}")
        print(f"¬øEs tu pizza v√°lida? {mi_pizza.valida}")
        print("-" * 30)

    elif opcion == '2':
        print("\nSaliendo del programa. ¬°Hasta pronto!")
        break # Esto rompe el bucle while y termina el programa.
    else:
        print("Opci√≥n no v√°lida. Por favor, selecciona 1 o 2.")

# --- Requerimiento 5e (Se ejecutar√° una vez que el bucle principal haya terminado, si no se sali√≥ antes) ---
# Esta parte est√° dise√±ada para mostrar un error, como se esperaba en el desaf√≠o original.
# Se ejecutar√° *despu√©s* de que el usuario elija salir o de que se complete una orden.
# Es importante notar que si el usuario ordena y luego el programa termina, este error aparecer√° al final.
# Si el usuario sale directamente sin ordenar, este error tambi√©n aparecer√° al final.
print("\n--- Intentando acceder a 'valida' como atributo de clase (esperamos un error) ---")
try:
    print(f"¬øLa clase Pizza es v√°lida? {Pizza.valida}")
except AttributeError as e:
    print(f"¬°Oops! Como esper√°bamos, se gener√≥ un error: {e}")
    print("Esto ocurre porque 'valida' es un atributo de *instancia*, no de clase.")
    print("Cada pizza individual tiene su propio estado de validez, no la clase en general.")
print("-" * 30)

print("\n¬°Desaf√≠o completado! ¬°Espero que disfrutes tu pizza (o al menos el c√≥digo de tu pizza)! üòä")